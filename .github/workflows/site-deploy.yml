name: Deploy website (Pages) + Health & Auto-Rollback

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write
  pages: write
  id-token: write

env:
  BACKUP_BRANCH: pages-backup
  CUSTOM_URL: https://www.virtauto.de

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Repo auschecken (muss als erstes kommen)
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Append news.json (Deploy start)
        run: |
          ts=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          tmp=$(mktemp)
          jq --arg ts "$ts"              --arg ev "Deploy start"              --arg agent "CI/CD"              --arg summary "Deployment pipeline triggered"              '. += [{"ts":$ts,"event":$ev,"agent":$agent,"summary":$summary}]' news.json > "$tmp"           && mv "$tmp" news.json

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: pages
        uses: actions/deploy-pages@v4

  healthcheck:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Check homepage (200 expected, 3 retries)
        shell: bash
        run: |
          URL="${{ env.CUSTOM_URL }}"
          if [ -z "$URL" ]; then
            echo "Fehler: No CUSTOM_URL provided"
            exit 1
          fi
          echo "Healthcheck on $URL"
          for i in 1 2 3; do
            code=$(curl -s -o /dev/null -w "%{http_code}" "$URL" || true)
            echo "Attempt $i - HTTP code: $code"
            if [ "$code" -eq 200 ]; then
              echo "Healthcheck passed"
              exit 0
            fi
            sleep 10
          done
          echo "Healthcheck failed after 3 attempts"
          exit 1

  rollback:
    runs-on: ubuntu-latest
    needs: healthcheck
    if: failure()
    steps:
      - uses: actions/checkout@v4
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Append news.json (Rollback)
        run: |
          ts=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          tmp=$(mktemp)
          jq --arg ts "$ts"              --arg ev "Rollback"              --arg agent "Healthcheck"              --arg summary "Restored from backup"              '. += [{"ts":$ts,"event":$ev,"agent":$agent,"summary":$summary}]' news.json > "$tmp"           && mv "$tmp" news.json
      # hier könnte man noch ein echtes Rollback-Deploy einfügen

  update-backup:
    runs-on: ubuntu-latest
    needs: healthcheck
    if: always()
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Append news.json (Backup update)
        run: |
          ts=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          tmp=$(mktemp)
          jq --arg ts "$ts"              --arg ev "Backup"              --arg agent "CI/CD"              --arg summary "Backup branch updated"              '. += [{"ts":$ts,"event":$ev,"agent":$agent,"summary":$summary}]' news.json > "$tmp"           && mv "$tmp" news.json

      - name: Update backup branch with current site
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git fetch origin "$BACKUP_BRANCH" || true
          git checkout -B "$BACKUP_BRANCH"
          git add -A
          git commit -m "backup from ${GITHUB_SHA}" || echo "No changes to commit"
          git push origin "$BACKUP_BRANCH" --force
