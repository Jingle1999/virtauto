name: Deploy website (Pages) + Health & Auto-Rollback

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write
  pages: write
  id-token: write

env:
  BACKUP_BRANCH: pages-backup
  CUSTOM_URL: https://www.virtauto.de

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Append news.json (Deploy start)
        run: |
          ts=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          tmp=$(mktemp)
          jq -n --arg ts "$ts" --arg ev "Deploy start" --arg ag "CI/CD" --arg su "Deployment pipeline triggered"             '[{"ts":$ts,"event":$ev,"agent":$ag,"summary":$su}]' > "$tmp"
          if [ -f news.json ]; then
            jq -s '.[0] + .[1]' "$tmp" news.json > news.tmp && mv news.tmp news.json
          else
            mv "$tmp" news.json
          fi

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: pages
        uses: actions/deploy-pages@v4

      - name: Append news.json (Deploy success)
        run: |
          ts=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          tmp=$(mktemp)
          jq -n --arg ts "$ts" --arg ev "Deploy success" --arg ag "CI/CD" --arg su "Deployment successful"             '[{"ts":$ts,"event":$ev,"agent":$ag,"summary":$su}]' > "$tmp"
          if [ -f news.json ]; then
            jq -s '.[0] + .[1]' "$tmp" news.json > news.tmp && mv news.tmp news.json
          else
            mv "$tmp" news.json
          fi

  healthcheck:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Check homepage
        shell: bash
        run: |
          URL="${{ env.CUSTOM_URL }}"
          if [ -z "$URL" ]; then
            echo "Error: No CUSTOM_URL provided" && exit 1
          fi
          echo "Healthcheck on $URL"
          for i in 1 2 3; do
            code=$(curl -s -o /dev/null -w "%{http_code}" "$URL" || true)
            echo "Attempt $i: HTTP code $code"
            if [ "$code" -eq 200 ]; then exit 0; fi
            sleep 5
          done
          exit 1

      - name: Append news.json (Healthcheck failed)
        if: failure()
        run: |
          ts=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          tmp=$(mktemp)
          jq -n --arg ts "$ts" --arg ev "Healthcheck failed" --arg ag "Monitor" --arg su "Site unreachable"             '[{"ts":$ts,"event":$ev,"agent":$ag,"summary":$su}]' > "$tmp"
          if [ -f news.json ]; then
            jq -s '.[0] + .[1]' "$tmp" news.json > news.tmp && mv news.tmp news.json
          else
            mv "$tmp" news.json
          fi

  rollback:
    runs-on: ubuntu-latest
    needs: healthcheck
    if: failure()
    steps:
      - uses: actions/upload-artifact@v4

      - name: Upload rollback artifact (unique)
        run: |
          ts=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          tmp=$(mktemp)
          jq -n --arg ts "$ts" --arg ev "Rollback" --arg ag "CI/CD" --arg su "Restored from backup"             '[{"ts":$ts,"event":$ev,"agent":$ag,"summary":$su}]' > "$tmp"
          if [ -f news.json ]; then
            jq -s '.[0] + .[1]' "$tmp" news.json > news.tmp && mv news.tmp news.json
          else
            mv "$tmp" news.json
          fi

      - name: Upload backup artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./

      - name: Deploy backup to GitHub Pages
        uses: actions/deploy-pages@v4

  update-backup:
    runs-on: ubuntu-latest
    needs: healthcheck
    if: success()
    steps:
      - uses: actions/checkout@v4
      - name: Update backup branch with current site
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git fetch origin "\${BACKUP_BRANCH}" || true
          git checkout -B "\${BACKUP_BRANCH}"
          git add -A
          git commit -m "backup from \${GITHUB_SHA}" || echo "No changes to commit"
          git push origin "\${BACKUP_BRANCH}" --force
