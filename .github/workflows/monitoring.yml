name: Website Monitoring Agent

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  schedule:
    - cron: '0 6 * * 1-5'   # werktags 06:00 UTC

jobs:
  monitoring:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f monitoring/requirements.txt ]; then
            pip install -r monitoring/requirements.txt
          fi

      - name: Verify repo layout
        run: |
          echo "Checking repo structure..."
          ls -R
          if [ ! -f monitoring/monitoring_agent.py ]; then
            echo "Error: monitoring/monitoring_agent.py not found!" >&2
            exit 1
          fi

      - name: Run Monitoring Agent
        working-directory: ./
        env:
          BASE_URL: ${{ vars.BASE_URL || 'https://www.virtauto.de' }}
        run: |
          mkdir -p logs ops tests
          python monitoring/monitoring_agent.py --output logs/agent_reports.md

      # Artefakte hochladen
      - name: Upload report artifact
        uses: actions/upload-artifact@v4
        with:
          name: monitoring-report
          path: logs/agent_reports.md
          if-no-files-found: error   # darf error sein, weil das Script die Datei jetzt garantiert schreibt

      - name: Upload telemetry artifact (only if file exists)
        if: hashFiles('ops/run_telemetry.json') != ''
        uses: actions/upload-artifact@v4
        with:
          name: agentops-telemetry
          path: ops/run_telemetry.json


      - name: Upload tests artifact (optional)
        if: ${{ hashFiles('tests/README.md') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: baseline-tests
          path: tests/README.md

      # Optional: Lighthouse CI (wenn später gewünscht/konfiguriert)
      # - name: Install Lighthouse CI
      #   run: |
      #     npm install -g @lhci/cli@0.14.x
      # - name: Run Lighthouse
      #   run: |
      #     lhci autorun --collect.url=${{ env.BASE_URL }} \
      #                  --upload.target=filesystem \
      #                  --upload.outputDir=logs/lighthouse
      # - name: Upload Lighthouse results
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: lighthouse-results
      #     path: logs/lighthouse
